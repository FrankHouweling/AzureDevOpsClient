<?php
/**
 * Event
 *
 * PHP version 5
 *
 * @category Class
 * @package  FrankHouweling\AzureDevOpsClient\Hooks
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ServiceHooks
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0-preview
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FrankHouweling\AzureDevOpsClient\Hooks\Model;

use \ArrayAccess;
use \FrankHouweling\AzureDevOpsClient\Hooks\ObjectSerializer;

/**
 * Event Class Doc Comment
 *
 * @category Class
 * @description Encapsulates the properties of an event.
 * @package  FrankHouweling\AzureDevOpsClient\Hooks
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Event implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Event';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'createdDate' => '\DateTime',
        'detailedMessage' => '\FrankHouweling\AzureDevOpsClient\Hooks\Model\FormattedEventMessage',
        'eventType' => 'string',
        'id' => 'string',
        'message' => '\FrankHouweling\AzureDevOpsClient\Hooks\Model\FormattedEventMessage',
        'publisherId' => 'string',
        'resource' => 'object',
        'resourceContainers' => 'map[string,\FrankHouweling\AzureDevOpsClient\Hooks\Model\ResourceContainer]',
        'resourceVersion' => 'string',
        'sessionToken' => '\FrankHouweling\AzureDevOpsClient\Hooks\Model\SessionToken'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'createdDate' => 'date-time',
        'detailedMessage' => null,
        'eventType' => null,
        'id' => 'uuid',
        'message' => null,
        'publisherId' => null,
        'resource' => null,
        'resourceContainers' => null,
        'resourceVersion' => null,
        'sessionToken' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'createdDate' => 'createdDate',
        'detailedMessage' => 'detailedMessage',
        'eventType' => 'eventType',
        'id' => 'id',
        'message' => 'message',
        'publisherId' => 'publisherId',
        'resource' => 'resource',
        'resourceContainers' => 'resourceContainers',
        'resourceVersion' => 'resourceVersion',
        'sessionToken' => 'sessionToken'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'createdDate' => 'setCreatedDate',
        'detailedMessage' => 'setDetailedMessage',
        'eventType' => 'setEventType',
        'id' => 'setId',
        'message' => 'setMessage',
        'publisherId' => 'setPublisherId',
        'resource' => 'setResource',
        'resourceContainers' => 'setResourceContainers',
        'resourceVersion' => 'setResourceVersion',
        'sessionToken' => 'setSessionToken'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'createdDate' => 'getCreatedDate',
        'detailedMessage' => 'getDetailedMessage',
        'eventType' => 'getEventType',
        'id' => 'getId',
        'message' => 'getMessage',
        'publisherId' => 'getPublisherId',
        'resource' => 'getResource',
        'resourceContainers' => 'getResourceContainers',
        'resourceVersion' => 'getResourceVersion',
        'sessionToken' => 'getSessionToken'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['createdDate'] = isset($data['createdDate']) ? $data['createdDate'] : null;
        $this->container['detailedMessage'] = isset($data['detailedMessage']) ? $data['detailedMessage'] : null;
        $this->container['eventType'] = isset($data['eventType']) ? $data['eventType'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['message'] = isset($data['message']) ? $data['message'] : null;
        $this->container['publisherId'] = isset($data['publisherId']) ? $data['publisherId'] : null;
        $this->container['resource'] = isset($data['resource']) ? $data['resource'] : null;
        $this->container['resourceContainers'] = isset($data['resourceContainers']) ? $data['resourceContainers'] : null;
        $this->container['resourceVersion'] = isset($data['resourceVersion']) ? $data['resourceVersion'] : null;
        $this->container['sessionToken'] = isset($data['sessionToken']) ? $data['sessionToken'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets createdDate
     *
     * @return \DateTime
     */
    public function getCreatedDate()
    {
        return $this->container['createdDate'];
    }

    /**
     * Sets createdDate
     *
     * @param \DateTime $createdDate Gets or sets the UTC-based date and time that this event was created.
     *
     * @return $this
     */
    public function setCreatedDate($createdDate)
    {
        $this->container['createdDate'] = $createdDate;

        return $this;
    }

    /**
     * Gets detailedMessage
     *
     * @return \FrankHouweling\AzureDevOpsClient\Hooks\Model\FormattedEventMessage
     */
    public function getDetailedMessage()
    {
        return $this->container['detailedMessage'];
    }

    /**
     * Sets detailedMessage
     *
     * @param \FrankHouweling\AzureDevOpsClient\Hooks\Model\FormattedEventMessage $detailedMessage Gets or sets the detailed message associated with this event.
     *
     * @return $this
     */
    public function setDetailedMessage($detailedMessage)
    {
        $this->container['detailedMessage'] = $detailedMessage;

        return $this;
    }

    /**
     * Gets eventType
     *
     * @return string
     */
    public function getEventType()
    {
        return $this->container['eventType'];
    }

    /**
     * Sets eventType
     *
     * @param string $eventType Gets or sets the type of this event.
     *
     * @return $this
     */
    public function setEventType($eventType)
    {
        $this->container['eventType'] = $eventType;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id Gets or sets the unique identifier of this event.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets message
     *
     * @return \FrankHouweling\AzureDevOpsClient\Hooks\Model\FormattedEventMessage
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param \FrankHouweling\AzureDevOpsClient\Hooks\Model\FormattedEventMessage $message Gets or sets the (brief) message associated with this event.
     *
     * @return $this
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }

    /**
     * Gets publisherId
     *
     * @return string
     */
    public function getPublisherId()
    {
        return $this->container['publisherId'];
    }

    /**
     * Sets publisherId
     *
     * @param string $publisherId Gets or sets the identifier of the publisher that raised this event.
     *
     * @return $this
     */
    public function setPublisherId($publisherId)
    {
        $this->container['publisherId'] = $publisherId;

        return $this;
    }

    /**
     * Gets resource
     *
     * @return object
     */
    public function getResource()
    {
        return $this->container['resource'];
    }

    /**
     * Sets resource
     *
     * @param object $resource Gets or sets the data associated with this event.
     *
     * @return $this
     */
    public function setResource($resource)
    {
        $this->container['resource'] = $resource;

        return $this;
    }

    /**
     * Gets resourceContainers
     *
     * @return map[string,\FrankHouweling\AzureDevOpsClient\Hooks\Model\ResourceContainer]
     */
    public function getResourceContainers()
    {
        return $this->container['resourceContainers'];
    }

    /**
     * Sets resourceContainers
     *
     * @param map[string,\FrankHouweling\AzureDevOpsClient\Hooks\Model\ResourceContainer] $resourceContainers Gets or sets the resource containers.
     *
     * @return $this
     */
    public function setResourceContainers($resourceContainers)
    {
        $this->container['resourceContainers'] = $resourceContainers;

        return $this;
    }

    /**
     * Gets resourceVersion
     *
     * @return string
     */
    public function getResourceVersion()
    {
        return $this->container['resourceVersion'];
    }

    /**
     * Sets resourceVersion
     *
     * @param string $resourceVersion Gets or sets the version of the data associated with this event.
     *
     * @return $this
     */
    public function setResourceVersion($resourceVersion)
    {
        $this->container['resourceVersion'] = $resourceVersion;

        return $this;
    }

    /**
     * Gets sessionToken
     *
     * @return \FrankHouweling\AzureDevOpsClient\Hooks\Model\SessionToken
     */
    public function getSessionToken()
    {
        return $this->container['sessionToken'];
    }

    /**
     * Sets sessionToken
     *
     * @param \FrankHouweling\AzureDevOpsClient\Hooks\Model\SessionToken $sessionToken Gets or sets the Session Token that can be used in further interactions
     *
     * @return $this
     */
    public function setSessionToken($sessionToken)
    {
        $this->container['sessionToken'] = $sessionToken;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


