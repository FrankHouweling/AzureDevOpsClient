<?php
/**
 * ReleaseDefinitionEnvironment
 *
 * PHP version 5
 *
 * @category Class
 * @package  AzureDevOpsClient\Release
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Release
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0-preview
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model;

use \ArrayAccess;
use \AzureDevOpsClient\Release\ObjectSerializer;

/**
 * ReleaseDefinitionEnvironment Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  AzureDevOpsClient\Release
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ReleaseDefinitionEnvironment implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ReleaseDefinitionEnvironment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'badgeUrl' => 'string',
        'conditions' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\Condition[]',
        'currentRelease' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseShallowReference',
        'demands' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\Demand[]',
        'deployPhases' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\DeployPhase[]',
        'deployStep' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionDeployStep',
        'environmentOptions' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentOptions',
        'environmentTriggers' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentTrigger[]',
        'executionPolicy' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentExecutionPolicy',
        'id' => 'int',
        'name' => 'string',
        'owner' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\IdentityRef',
        'postDeployApprovals' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals',
        'postDeploymentGates' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep',
        'preDeployApprovals' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals',
        'preDeploymentGates' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep',
        'processParameters' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ProcessParameters',
        'properties' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\PropertiesCollection',
        'queueId' => 'int',
        'rank' => 'int',
        'retentionPolicy' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentRetentionPolicy',
        'schedules' => '\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseSchedule[]',
        'variableGroups' => 'int[]',
        'variables' => 'map[string,\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ConfigurationVariableValue]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'badgeUrl' => null,
        'conditions' => null,
        'currentRelease' => null,
        'demands' => null,
        'deployPhases' => null,
        'deployStep' => null,
        'environmentOptions' => null,
        'environmentTriggers' => null,
        'executionPolicy' => null,
        'id' => 'int32',
        'name' => null,
        'owner' => null,
        'postDeployApprovals' => null,
        'postDeploymentGates' => null,
        'preDeployApprovals' => null,
        'preDeploymentGates' => null,
        'processParameters' => null,
        'properties' => null,
        'queueId' => 'int32',
        'rank' => 'int32',
        'retentionPolicy' => null,
        'schedules' => null,
        'variableGroups' => 'int32',
        'variables' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'badgeUrl' => 'badgeUrl',
        'conditions' => 'conditions',
        'currentRelease' => 'currentRelease',
        'demands' => 'demands',
        'deployPhases' => 'deployPhases',
        'deployStep' => 'deployStep',
        'environmentOptions' => 'environmentOptions',
        'environmentTriggers' => 'environmentTriggers',
        'executionPolicy' => 'executionPolicy',
        'id' => 'id',
        'name' => 'name',
        'owner' => 'owner',
        'postDeployApprovals' => 'postDeployApprovals',
        'postDeploymentGates' => 'postDeploymentGates',
        'preDeployApprovals' => 'preDeployApprovals',
        'preDeploymentGates' => 'preDeploymentGates',
        'processParameters' => 'processParameters',
        'properties' => 'properties',
        'queueId' => 'queueId',
        'rank' => 'rank',
        'retentionPolicy' => 'retentionPolicy',
        'schedules' => 'schedules',
        'variableGroups' => 'variableGroups',
        'variables' => 'variables'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'badgeUrl' => 'setBadgeUrl',
        'conditions' => 'setConditions',
        'currentRelease' => 'setCurrentRelease',
        'demands' => 'setDemands',
        'deployPhases' => 'setDeployPhases',
        'deployStep' => 'setDeployStep',
        'environmentOptions' => 'setEnvironmentOptions',
        'environmentTriggers' => 'setEnvironmentTriggers',
        'executionPolicy' => 'setExecutionPolicy',
        'id' => 'setId',
        'name' => 'setName',
        'owner' => 'setOwner',
        'postDeployApprovals' => 'setPostDeployApprovals',
        'postDeploymentGates' => 'setPostDeploymentGates',
        'preDeployApprovals' => 'setPreDeployApprovals',
        'preDeploymentGates' => 'setPreDeploymentGates',
        'processParameters' => 'setProcessParameters',
        'properties' => 'setProperties',
        'queueId' => 'setQueueId',
        'rank' => 'setRank',
        'retentionPolicy' => 'setRetentionPolicy',
        'schedules' => 'setSchedules',
        'variableGroups' => 'setVariableGroups',
        'variables' => 'setVariables'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'badgeUrl' => 'getBadgeUrl',
        'conditions' => 'getConditions',
        'currentRelease' => 'getCurrentRelease',
        'demands' => 'getDemands',
        'deployPhases' => 'getDeployPhases',
        'deployStep' => 'getDeployStep',
        'environmentOptions' => 'getEnvironmentOptions',
        'environmentTriggers' => 'getEnvironmentTriggers',
        'executionPolicy' => 'getExecutionPolicy',
        'id' => 'getId',
        'name' => 'getName',
        'owner' => 'getOwner',
        'postDeployApprovals' => 'getPostDeployApprovals',
        'postDeploymentGates' => 'getPostDeploymentGates',
        'preDeployApprovals' => 'getPreDeployApprovals',
        'preDeploymentGates' => 'getPreDeploymentGates',
        'processParameters' => 'getProcessParameters',
        'properties' => 'getProperties',
        'queueId' => 'getQueueId',
        'rank' => 'getRank',
        'retentionPolicy' => 'getRetentionPolicy',
        'schedules' => 'getSchedules',
        'variableGroups' => 'getVariableGroups',
        'variables' => 'getVariables'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['badgeUrl'] = isset($data['badgeUrl']) ? $data['badgeUrl'] : null;
        $this->container['conditions'] = isset($data['conditions']) ? $data['conditions'] : null;
        $this->container['currentRelease'] = isset($data['currentRelease']) ? $data['currentRelease'] : null;
        $this->container['demands'] = isset($data['demands']) ? $data['demands'] : null;
        $this->container['deployPhases'] = isset($data['deployPhases']) ? $data['deployPhases'] : null;
        $this->container['deployStep'] = isset($data['deployStep']) ? $data['deployStep'] : null;
        $this->container['environmentOptions'] = isset($data['environmentOptions']) ? $data['environmentOptions'] : null;
        $this->container['environmentTriggers'] = isset($data['environmentTriggers']) ? $data['environmentTriggers'] : null;
        $this->container['executionPolicy'] = isset($data['executionPolicy']) ? $data['executionPolicy'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['postDeployApprovals'] = isset($data['postDeployApprovals']) ? $data['postDeployApprovals'] : null;
        $this->container['postDeploymentGates'] = isset($data['postDeploymentGates']) ? $data['postDeploymentGates'] : null;
        $this->container['preDeployApprovals'] = isset($data['preDeployApprovals']) ? $data['preDeployApprovals'] : null;
        $this->container['preDeploymentGates'] = isset($data['preDeploymentGates']) ? $data['preDeploymentGates'] : null;
        $this->container['processParameters'] = isset($data['processParameters']) ? $data['processParameters'] : null;
        $this->container['properties'] = isset($data['properties']) ? $data['properties'] : null;
        $this->container['queueId'] = isset($data['queueId']) ? $data['queueId'] : null;
        $this->container['rank'] = isset($data['rank']) ? $data['rank'] : null;
        $this->container['retentionPolicy'] = isset($data['retentionPolicy']) ? $data['retentionPolicy'] : null;
        $this->container['schedules'] = isset($data['schedules']) ? $data['schedules'] : null;
        $this->container['variableGroups'] = isset($data['variableGroups']) ? $data['variableGroups'] : null;
        $this->container['variables'] = isset($data['variables']) ? $data['variables'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets badgeUrl
     *
     * @return string
     */
    public function getBadgeUrl()
    {
        return $this->container['badgeUrl'];
    }

    /**
     * Sets badgeUrl
     *
     * @param string $badgeUrl Gets or sets the BadgeUrl. BadgeUrl will be used when Badge will be enabled in Release Definition Environment.
     *
     * @return $this
     */
    public function setBadgeUrl($badgeUrl)
    {
        $this->container['badgeUrl'] = $badgeUrl;

        return $this;
    }

    /**
     * Gets conditions
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\Condition[]
     */
    public function getConditions()
    {
        return $this->container['conditions'];
    }

    /**
     * Sets conditions
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\Condition[] $conditions Gets or sets the environment conditions.
     *
     * @return $this
     */
    public function setConditions($conditions)
    {
        $this->container['conditions'] = $conditions;

        return $this;
    }

    /**
     * Gets currentRelease
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseShallowReference
     */
    public function getCurrentRelease()
    {
        return $this->container['currentRelease'];
    }

    /**
     * Sets currentRelease
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseShallowReference $currentRelease Gets or sets the current release reference.
     *
     * @return $this
     */
    public function setCurrentRelease($currentRelease)
    {
        $this->container['currentRelease'] = $currentRelease;

        return $this;
    }

    /**
     * Gets demands
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\Demand[]
     */
    public function getDemands()
    {
        return $this->container['demands'];
    }

    /**
     * Sets demands
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\Demand[] $demands Gets or sets the demands.
     *
     * @return $this
     */
    public function setDemands($demands)
    {
        $this->container['demands'] = $demands;

        return $this;
    }

    /**
     * Gets deployPhases
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\DeployPhase[]
     */
    public function getDeployPhases()
    {
        return $this->container['deployPhases'];
    }

    /**
     * Sets deployPhases
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\DeployPhase[] $deployPhases Gets or sets the deploy phases of environment.
     *
     * @return $this
     */
    public function setDeployPhases($deployPhases)
    {
        $this->container['deployPhases'] = $deployPhases;

        return $this;
    }

    /**
     * Gets deployStep
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionDeployStep
     */
    public function getDeployStep()
    {
        return $this->container['deployStep'];
    }

    /**
     * Sets deployStep
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionDeployStep $deployStep Gets or sets the deploystep.
     *
     * @return $this
     */
    public function setDeployStep($deployStep)
    {
        $this->container['deployStep'] = $deployStep;

        return $this;
    }

    /**
     * Gets environmentOptions
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentOptions
     */
    public function getEnvironmentOptions()
    {
        return $this->container['environmentOptions'];
    }

    /**
     * Sets environmentOptions
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentOptions $environmentOptions Gets or sets the environment options.
     *
     * @return $this
     */
    public function setEnvironmentOptions($environmentOptions)
    {
        $this->container['environmentOptions'] = $environmentOptions;

        return $this;
    }

    /**
     * Gets environmentTriggers
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentTrigger[]
     */
    public function getEnvironmentTriggers()
    {
        return $this->container['environmentTriggers'];
    }

    /**
     * Sets environmentTriggers
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentTrigger[] $environmentTriggers Gets or sets the triggers on environment.
     *
     * @return $this
     */
    public function setEnvironmentTriggers($environmentTriggers)
    {
        $this->container['environmentTriggers'] = $environmentTriggers;

        return $this;
    }

    /**
     * Gets executionPolicy
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentExecutionPolicy
     */
    public function getExecutionPolicy()
    {
        return $this->container['executionPolicy'];
    }

    /**
     * Sets executionPolicy
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentExecutionPolicy $executionPolicy Gets or sets the environment execution policy.
     *
     * @return $this
     */
    public function setExecutionPolicy($executionPolicy)
    {
        $this->container['executionPolicy'] = $executionPolicy;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id Gets and sets the ID of the ReleaseDefinitionEnvironment.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Gets and sets the name of the ReleaseDefinitionEnvironment.
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\IdentityRef
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\IdentityRef $owner Gets and sets the Owner of the ReleaseDefinitionEnvironment.
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets postDeployApprovals
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals
     */
    public function getPostDeployApprovals()
    {
        return $this->container['postDeployApprovals'];
    }

    /**
     * Sets postDeployApprovals
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals $postDeployApprovals Gets or sets the post deployment approvals.
     *
     * @return $this
     */
    public function setPostDeployApprovals($postDeployApprovals)
    {
        $this->container['postDeployApprovals'] = $postDeployApprovals;

        return $this;
    }

    /**
     * Gets postDeploymentGates
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep
     */
    public function getPostDeploymentGates()
    {
        return $this->container['postDeploymentGates'];
    }

    /**
     * Sets postDeploymentGates
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep $postDeploymentGates Gets or sets the post deployment gates.
     *
     * @return $this
     */
    public function setPostDeploymentGates($postDeploymentGates)
    {
        $this->container['postDeploymentGates'] = $postDeploymentGates;

        return $this;
    }

    /**
     * Gets preDeployApprovals
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals
     */
    public function getPreDeployApprovals()
    {
        return $this->container['preDeployApprovals'];
    }

    /**
     * Sets preDeployApprovals
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals $preDeployApprovals Gets or sets the pre deployment approvals.
     *
     * @return $this
     */
    public function setPreDeployApprovals($preDeployApprovals)
    {
        $this->container['preDeployApprovals'] = $preDeployApprovals;

        return $this;
    }

    /**
     * Gets preDeploymentGates
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep
     */
    public function getPreDeploymentGates()
    {
        return $this->container['preDeploymentGates'];
    }

    /**
     * Sets preDeploymentGates
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep $preDeploymentGates Gets or sets the pre deployment gates.
     *
     * @return $this
     */
    public function setPreDeploymentGates($preDeploymentGates)
    {
        $this->container['preDeploymentGates'] = $preDeploymentGates;

        return $this;
    }

    /**
     * Gets processParameters
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ProcessParameters
     */
    public function getProcessParameters()
    {
        return $this->container['processParameters'];
    }

    /**
     * Sets processParameters
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ProcessParameters $processParameters Gets or sets the environment process parameters.
     *
     * @return $this
     */
    public function setProcessParameters($processParameters)
    {
        $this->container['processParameters'] = $processParameters;

        return $this;
    }

    /**
     * Gets properties
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\PropertiesCollection
     */
    public function getProperties()
    {
        return $this->container['properties'];
    }

    /**
     * Sets properties
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\PropertiesCollection $properties Gets or sets the properties on environment.
     *
     * @return $this
     */
    public function setProperties($properties)
    {
        $this->container['properties'] = $properties;

        return $this;
    }

    /**
     * Gets queueId
     *
     * @return int
     */
    public function getQueueId()
    {
        return $this->container['queueId'];
    }

    /**
     * Sets queueId
     *
     * @param int $queueId Gets or sets the queue ID.
     *
     * @return $this
     */
    public function setQueueId($queueId)
    {
        $this->container['queueId'] = $queueId;

        return $this;
    }

    /**
     * Gets rank
     *
     * @return int
     */
    public function getRank()
    {
        return $this->container['rank'];
    }

    /**
     * Sets rank
     *
     * @param int $rank Gets and sets the rank of the ReleaseDefinitionEnvironment.
     *
     * @return $this
     */
    public function setRank($rank)
    {
        $this->container['rank'] = $rank;

        return $this;
    }

    /**
     * Gets retentionPolicy
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentRetentionPolicy
     */
    public function getRetentionPolicy()
    {
        return $this->container['retentionPolicy'];
    }

    /**
     * Sets retentionPolicy
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\EnvironmentRetentionPolicy $retentionPolicy Gets or sets the environment retention policy.
     *
     * @return $this
     */
    public function setRetentionPolicy($retentionPolicy)
    {
        $this->container['retentionPolicy'] = $retentionPolicy;

        return $this;
    }

    /**
     * Gets schedules
     *
     * @return \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseSchedule[]
     */
    public function getSchedules()
    {
        return $this->container['schedules'];
    }

    /**
     * Sets schedules
     *
     * @param \AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ReleaseSchedule[] $schedules Gets or sets the schedules
     *
     * @return $this
     */
    public function setSchedules($schedules)
    {
        $this->container['schedules'] = $schedules;

        return $this;
    }

    /**
     * Gets variableGroups
     *
     * @return int[]
     */
    public function getVariableGroups()
    {
        return $this->container['variableGroups'];
    }

    /**
     * Sets variableGroups
     *
     * @param int[] $variableGroups Gets or sets the variable groups.
     *
     * @return $this
     */
    public function setVariableGroups($variableGroups)
    {
        $this->container['variableGroups'] = $variableGroups;

        return $this;
    }

    /**
     * Gets variables
     *
     * @return map[string,\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ConfigurationVariableValue]
     */
    public function getVariables()
    {
        return $this->container['variables'];
    }

    /**
     * Sets variables
     *
     * @param map[string,\AzureDevOpsClient\Release\AzureDevOpsClient\Release\Model\ConfigurationVariableValue] $variables Gets and sets the variables.
     *
     * @return $this
     */
    public function setVariables($variables)
    {
        $this->container['variables'] = $variables;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


