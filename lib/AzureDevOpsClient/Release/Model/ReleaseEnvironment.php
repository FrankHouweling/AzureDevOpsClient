<?php
/**
 * ReleaseEnvironment
 *
 * PHP version 5
 *
 * @category Class
 * @package  FrankHouweling\AzureDevOpsClient\Release
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Release
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0-preview
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FrankHouweling\AzureDevOpsClient\Release\Model;

use \ArrayAccess;
use \FrankHouweling\AzureDevOpsClient\Release\ObjectSerializer;

/**
 * ReleaseEnvironment Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FrankHouweling\AzureDevOpsClient\Release
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ReleaseEnvironment implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ReleaseEnvironment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'conditions' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseCondition[]',
        'createdOn' => '\DateTime',
        'definitionEnvironmentId' => 'int',
        'deployPhasesSnapshot' => '\FrankHouweling\AzureDevOpsClient\Release\Model\DeployPhase[]',
        'deploySteps' => '\FrankHouweling\AzureDevOpsClient\Release\Model\DeploymentAttempt[]',
        'environmentOptions' => '\FrankHouweling\AzureDevOpsClient\Release\Model\EnvironmentOptions',
        'id' => 'int',
        'modifiedOn' => '\DateTime',
        'name' => 'string',
        'nextScheduledUtcTime' => '\DateTime',
        'owner' => '\FrankHouweling\AzureDevOpsClient\Release\Model\IdentityRef',
        'postApprovalsSnapshot' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals',
        'postDeployApprovals' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseApproval[]',
        'postDeploymentGatesSnapshot' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep',
        'preApprovalsSnapshot' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals',
        'preDeployApprovals' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseApproval[]',
        'preDeploymentGatesSnapshot' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep',
        'processParameters' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ProcessParameters',
        'rank' => 'int',
        'release' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseShallowReference',
        'releaseCreatedBy' => '\FrankHouweling\AzureDevOpsClient\Release\Model\IdentityRef',
        'releaseDefinition' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionShallowReference',
        'releaseId' => 'int',
        'scheduledDeploymentTime' => '\DateTime',
        'schedules' => '\FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseSchedule[]',
        'status' => 'string',
        'timeToDeploy' => 'double',
        'triggerReason' => 'string',
        'variableGroups' => '\FrankHouweling\AzureDevOpsClient\Release\Model\VariableGroup[]',
        'variables' => 'map[string,\FrankHouweling\AzureDevOpsClient\Release\Model\ConfigurationVariableValue]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'conditions' => null,
        'createdOn' => 'date-time',
        'definitionEnvironmentId' => 'int32',
        'deployPhasesSnapshot' => null,
        'deploySteps' => null,
        'environmentOptions' => null,
        'id' => 'int32',
        'modifiedOn' => 'date-time',
        'name' => null,
        'nextScheduledUtcTime' => 'date-time',
        'owner' => null,
        'postApprovalsSnapshot' => null,
        'postDeployApprovals' => null,
        'postDeploymentGatesSnapshot' => null,
        'preApprovalsSnapshot' => null,
        'preDeployApprovals' => null,
        'preDeploymentGatesSnapshot' => null,
        'processParameters' => null,
        'rank' => 'int32',
        'release' => null,
        'releaseCreatedBy' => null,
        'releaseDefinition' => null,
        'releaseId' => 'int32',
        'scheduledDeploymentTime' => 'date-time',
        'schedules' => null,
        'status' => null,
        'timeToDeploy' => 'double',
        'triggerReason' => null,
        'variableGroups' => null,
        'variables' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'conditions' => 'conditions',
        'createdOn' => 'createdOn',
        'definitionEnvironmentId' => 'definitionEnvironmentId',
        'deployPhasesSnapshot' => 'deployPhasesSnapshot',
        'deploySteps' => 'deploySteps',
        'environmentOptions' => 'environmentOptions',
        'id' => 'id',
        'modifiedOn' => 'modifiedOn',
        'name' => 'name',
        'nextScheduledUtcTime' => 'nextScheduledUtcTime',
        'owner' => 'owner',
        'postApprovalsSnapshot' => 'postApprovalsSnapshot',
        'postDeployApprovals' => 'postDeployApprovals',
        'postDeploymentGatesSnapshot' => 'postDeploymentGatesSnapshot',
        'preApprovalsSnapshot' => 'preApprovalsSnapshot',
        'preDeployApprovals' => 'preDeployApprovals',
        'preDeploymentGatesSnapshot' => 'preDeploymentGatesSnapshot',
        'processParameters' => 'processParameters',
        'rank' => 'rank',
        'release' => 'release',
        'releaseCreatedBy' => 'releaseCreatedBy',
        'releaseDefinition' => 'releaseDefinition',
        'releaseId' => 'releaseId',
        'scheduledDeploymentTime' => 'scheduledDeploymentTime',
        'schedules' => 'schedules',
        'status' => 'status',
        'timeToDeploy' => 'timeToDeploy',
        'triggerReason' => 'triggerReason',
        'variableGroups' => 'variableGroups',
        'variables' => 'variables'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'conditions' => 'setConditions',
        'createdOn' => 'setCreatedOn',
        'definitionEnvironmentId' => 'setDefinitionEnvironmentId',
        'deployPhasesSnapshot' => 'setDeployPhasesSnapshot',
        'deploySteps' => 'setDeploySteps',
        'environmentOptions' => 'setEnvironmentOptions',
        'id' => 'setId',
        'modifiedOn' => 'setModifiedOn',
        'name' => 'setName',
        'nextScheduledUtcTime' => 'setNextScheduledUtcTime',
        'owner' => 'setOwner',
        'postApprovalsSnapshot' => 'setPostApprovalsSnapshot',
        'postDeployApprovals' => 'setPostDeployApprovals',
        'postDeploymentGatesSnapshot' => 'setPostDeploymentGatesSnapshot',
        'preApprovalsSnapshot' => 'setPreApprovalsSnapshot',
        'preDeployApprovals' => 'setPreDeployApprovals',
        'preDeploymentGatesSnapshot' => 'setPreDeploymentGatesSnapshot',
        'processParameters' => 'setProcessParameters',
        'rank' => 'setRank',
        'release' => 'setRelease',
        'releaseCreatedBy' => 'setReleaseCreatedBy',
        'releaseDefinition' => 'setReleaseDefinition',
        'releaseId' => 'setReleaseId',
        'scheduledDeploymentTime' => 'setScheduledDeploymentTime',
        'schedules' => 'setSchedules',
        'status' => 'setStatus',
        'timeToDeploy' => 'setTimeToDeploy',
        'triggerReason' => 'setTriggerReason',
        'variableGroups' => 'setVariableGroups',
        'variables' => 'setVariables'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'conditions' => 'getConditions',
        'createdOn' => 'getCreatedOn',
        'definitionEnvironmentId' => 'getDefinitionEnvironmentId',
        'deployPhasesSnapshot' => 'getDeployPhasesSnapshot',
        'deploySteps' => 'getDeploySteps',
        'environmentOptions' => 'getEnvironmentOptions',
        'id' => 'getId',
        'modifiedOn' => 'getModifiedOn',
        'name' => 'getName',
        'nextScheduledUtcTime' => 'getNextScheduledUtcTime',
        'owner' => 'getOwner',
        'postApprovalsSnapshot' => 'getPostApprovalsSnapshot',
        'postDeployApprovals' => 'getPostDeployApprovals',
        'postDeploymentGatesSnapshot' => 'getPostDeploymentGatesSnapshot',
        'preApprovalsSnapshot' => 'getPreApprovalsSnapshot',
        'preDeployApprovals' => 'getPreDeployApprovals',
        'preDeploymentGatesSnapshot' => 'getPreDeploymentGatesSnapshot',
        'processParameters' => 'getProcessParameters',
        'rank' => 'getRank',
        'release' => 'getRelease',
        'releaseCreatedBy' => 'getReleaseCreatedBy',
        'releaseDefinition' => 'getReleaseDefinition',
        'releaseId' => 'getReleaseId',
        'scheduledDeploymentTime' => 'getScheduledDeploymentTime',
        'schedules' => 'getSchedules',
        'status' => 'getStatus',
        'timeToDeploy' => 'getTimeToDeploy',
        'triggerReason' => 'getTriggerReason',
        'variableGroups' => 'getVariableGroups',
        'variables' => 'getVariables'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const STATUS_UNDEFINED = 'undefined';
    const STATUS_NOT_STARTED = 'notStarted';
    const STATUS_IN_PROGRESS = 'inProgress';
    const STATUS_SUCCEEDED = 'succeeded';
    const STATUS_CANCELED = 'canceled';
    const STATUS_REJECTED = 'rejected';
    const STATUS_QUEUED = 'queued';
    const STATUS_SCHEDULED = 'scheduled';
    const STATUS_PARTIALLY_SUCCEEDED = 'partiallySucceeded';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getStatusAllowableValues()
    {
        return [
            self::STATUS_UNDEFINED,
            self::STATUS_NOT_STARTED,
            self::STATUS_IN_PROGRESS,
            self::STATUS_SUCCEEDED,
            self::STATUS_CANCELED,
            self::STATUS_REJECTED,
            self::STATUS_QUEUED,
            self::STATUS_SCHEDULED,
            self::STATUS_PARTIALLY_SUCCEEDED,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['conditions'] = isset($data['conditions']) ? $data['conditions'] : null;
        $this->container['createdOn'] = isset($data['createdOn']) ? $data['createdOn'] : null;
        $this->container['definitionEnvironmentId'] = isset($data['definitionEnvironmentId']) ? $data['definitionEnvironmentId'] : null;
        $this->container['deployPhasesSnapshot'] = isset($data['deployPhasesSnapshot']) ? $data['deployPhasesSnapshot'] : null;
        $this->container['deploySteps'] = isset($data['deploySteps']) ? $data['deploySteps'] : null;
        $this->container['environmentOptions'] = isset($data['environmentOptions']) ? $data['environmentOptions'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['modifiedOn'] = isset($data['modifiedOn']) ? $data['modifiedOn'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['nextScheduledUtcTime'] = isset($data['nextScheduledUtcTime']) ? $data['nextScheduledUtcTime'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['postApprovalsSnapshot'] = isset($data['postApprovalsSnapshot']) ? $data['postApprovalsSnapshot'] : null;
        $this->container['postDeployApprovals'] = isset($data['postDeployApprovals']) ? $data['postDeployApprovals'] : null;
        $this->container['postDeploymentGatesSnapshot'] = isset($data['postDeploymentGatesSnapshot']) ? $data['postDeploymentGatesSnapshot'] : null;
        $this->container['preApprovalsSnapshot'] = isset($data['preApprovalsSnapshot']) ? $data['preApprovalsSnapshot'] : null;
        $this->container['preDeployApprovals'] = isset($data['preDeployApprovals']) ? $data['preDeployApprovals'] : null;
        $this->container['preDeploymentGatesSnapshot'] = isset($data['preDeploymentGatesSnapshot']) ? $data['preDeploymentGatesSnapshot'] : null;
        $this->container['processParameters'] = isset($data['processParameters']) ? $data['processParameters'] : null;
        $this->container['rank'] = isset($data['rank']) ? $data['rank'] : null;
        $this->container['release'] = isset($data['release']) ? $data['release'] : null;
        $this->container['releaseCreatedBy'] = isset($data['releaseCreatedBy']) ? $data['releaseCreatedBy'] : null;
        $this->container['releaseDefinition'] = isset($data['releaseDefinition']) ? $data['releaseDefinition'] : null;
        $this->container['releaseId'] = isset($data['releaseId']) ? $data['releaseId'] : null;
        $this->container['scheduledDeploymentTime'] = isset($data['scheduledDeploymentTime']) ? $data['scheduledDeploymentTime'] : null;
        $this->container['schedules'] = isset($data['schedules']) ? $data['schedules'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['timeToDeploy'] = isset($data['timeToDeploy']) ? $data['timeToDeploy'] : null;
        $this->container['triggerReason'] = isset($data['triggerReason']) ? $data['triggerReason'] : null;
        $this->container['variableGroups'] = isset($data['variableGroups']) ? $data['variableGroups'] : null;
        $this->container['variables'] = isset($data['variables']) ? $data['variables'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($this->container['status']) && !in_array($this->container['status'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets conditions
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseCondition[]
     */
    public function getConditions()
    {
        return $this->container['conditions'];
    }

    /**
     * Sets conditions
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseCondition[] $conditions Gets list of conditions.
     *
     * @return $this
     */
    public function setConditions($conditions)
    {
        $this->container['conditions'] = $conditions;

        return $this;
    }

    /**
     * Gets createdOn
     *
     * @return \DateTime
     */
    public function getCreatedOn()
    {
        return $this->container['createdOn'];
    }

    /**
     * Sets createdOn
     *
     * @param \DateTime $createdOn Gets date on which it got created.
     *
     * @return $this
     */
    public function setCreatedOn($createdOn)
    {
        $this->container['createdOn'] = $createdOn;

        return $this;
    }

    /**
     * Gets definitionEnvironmentId
     *
     * @return int
     */
    public function getDefinitionEnvironmentId()
    {
        return $this->container['definitionEnvironmentId'];
    }

    /**
     * Sets definitionEnvironmentId
     *
     * @param int $definitionEnvironmentId Gets definition environment id.
     *
     * @return $this
     */
    public function setDefinitionEnvironmentId($definitionEnvironmentId)
    {
        $this->container['definitionEnvironmentId'] = $definitionEnvironmentId;

        return $this;
    }

    /**
     * Gets deployPhasesSnapshot
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\DeployPhase[]
     */
    public function getDeployPhasesSnapshot()
    {
        return $this->container['deployPhasesSnapshot'];
    }

    /**
     * Sets deployPhasesSnapshot
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\DeployPhase[] $deployPhasesSnapshot Gets list of deploy phases snapshot.
     *
     * @return $this
     */
    public function setDeployPhasesSnapshot($deployPhasesSnapshot)
    {
        $this->container['deployPhasesSnapshot'] = $deployPhasesSnapshot;

        return $this;
    }

    /**
     * Gets deploySteps
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\DeploymentAttempt[]
     */
    public function getDeploySteps()
    {
        return $this->container['deploySteps'];
    }

    /**
     * Sets deploySteps
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\DeploymentAttempt[] $deploySteps Gets deploy steps.
     *
     * @return $this
     */
    public function setDeploySteps($deploySteps)
    {
        $this->container['deploySteps'] = $deploySteps;

        return $this;
    }

    /**
     * Gets environmentOptions
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\EnvironmentOptions
     */
    public function getEnvironmentOptions()
    {
        return $this->container['environmentOptions'];
    }

    /**
     * Sets environmentOptions
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\EnvironmentOptions $environmentOptions Gets environment options.
     *
     * @return $this
     */
    public function setEnvironmentOptions($environmentOptions)
    {
        $this->container['environmentOptions'] = $environmentOptions;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id Gets the unique identifier of this field.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets modifiedOn
     *
     * @return \DateTime
     */
    public function getModifiedOn()
    {
        return $this->container['modifiedOn'];
    }

    /**
     * Sets modifiedOn
     *
     * @param \DateTime $modifiedOn Gets date on which it got modified.
     *
     * @return $this
     */
    public function setModifiedOn($modifiedOn)
    {
        $this->container['modifiedOn'] = $modifiedOn;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Gets name.
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets nextScheduledUtcTime
     *
     * @return \DateTime
     */
    public function getNextScheduledUtcTime()
    {
        return $this->container['nextScheduledUtcTime'];
    }

    /**
     * Sets nextScheduledUtcTime
     *
     * @param \DateTime $nextScheduledUtcTime Gets next scheduled UTC time.
     *
     * @return $this
     */
    public function setNextScheduledUtcTime($nextScheduledUtcTime)
    {
        $this->container['nextScheduledUtcTime'] = $nextScheduledUtcTime;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\IdentityRef
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\IdentityRef $owner Gets the identity who is owner for release environment.
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets postApprovalsSnapshot
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals
     */
    public function getPostApprovalsSnapshot()
    {
        return $this->container['postApprovalsSnapshot'];
    }

    /**
     * Sets postApprovalsSnapshot
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals $postApprovalsSnapshot Gets list of post deploy approvals snapshot.
     *
     * @return $this
     */
    public function setPostApprovalsSnapshot($postApprovalsSnapshot)
    {
        $this->container['postApprovalsSnapshot'] = $postApprovalsSnapshot;

        return $this;
    }

    /**
     * Gets postDeployApprovals
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseApproval[]
     */
    public function getPostDeployApprovals()
    {
        return $this->container['postDeployApprovals'];
    }

    /**
     * Sets postDeployApprovals
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseApproval[] $postDeployApprovals Gets list of post deploy approvals.
     *
     * @return $this
     */
    public function setPostDeployApprovals($postDeployApprovals)
    {
        $this->container['postDeployApprovals'] = $postDeployApprovals;

        return $this;
    }

    /**
     * Gets postDeploymentGatesSnapshot
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep
     */
    public function getPostDeploymentGatesSnapshot()
    {
        return $this->container['postDeploymentGatesSnapshot'];
    }

    /**
     * Sets postDeploymentGatesSnapshot
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep $postDeploymentGatesSnapshot Post deployment gates snapshot data.
     *
     * @return $this
     */
    public function setPostDeploymentGatesSnapshot($postDeploymentGatesSnapshot)
    {
        $this->container['postDeploymentGatesSnapshot'] = $postDeploymentGatesSnapshot;

        return $this;
    }

    /**
     * Gets preApprovalsSnapshot
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals
     */
    public function getPreApprovalsSnapshot()
    {
        return $this->container['preApprovalsSnapshot'];
    }

    /**
     * Sets preApprovalsSnapshot
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionApprovals $preApprovalsSnapshot Gets list of pre deploy approvals snapshot.
     *
     * @return $this
     */
    public function setPreApprovalsSnapshot($preApprovalsSnapshot)
    {
        $this->container['preApprovalsSnapshot'] = $preApprovalsSnapshot;

        return $this;
    }

    /**
     * Gets preDeployApprovals
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseApproval[]
     */
    public function getPreDeployApprovals()
    {
        return $this->container['preDeployApprovals'];
    }

    /**
     * Sets preDeployApprovals
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseApproval[] $preDeployApprovals Gets list of pre deploy approvals.
     *
     * @return $this
     */
    public function setPreDeployApprovals($preDeployApprovals)
    {
        $this->container['preDeployApprovals'] = $preDeployApprovals;

        return $this;
    }

    /**
     * Gets preDeploymentGatesSnapshot
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep
     */
    public function getPreDeploymentGatesSnapshot()
    {
        return $this->container['preDeploymentGatesSnapshot'];
    }

    /**
     * Sets preDeploymentGatesSnapshot
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionGatesStep $preDeploymentGatesSnapshot Pre deployment gates snapshot data.
     *
     * @return $this
     */
    public function setPreDeploymentGatesSnapshot($preDeploymentGatesSnapshot)
    {
        $this->container['preDeploymentGatesSnapshot'] = $preDeploymentGatesSnapshot;

        return $this;
    }

    /**
     * Gets processParameters
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ProcessParameters
     */
    public function getProcessParameters()
    {
        return $this->container['processParameters'];
    }

    /**
     * Sets processParameters
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ProcessParameters $processParameters Gets process parameters.
     *
     * @return $this
     */
    public function setProcessParameters($processParameters)
    {
        $this->container['processParameters'] = $processParameters;

        return $this;
    }

    /**
     * Gets rank
     *
     * @return int
     */
    public function getRank()
    {
        return $this->container['rank'];
    }

    /**
     * Sets rank
     *
     * @param int $rank Gets rank.
     *
     * @return $this
     */
    public function setRank($rank)
    {
        $this->container['rank'] = $rank;

        return $this;
    }

    /**
     * Gets release
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseShallowReference
     */
    public function getRelease()
    {
        return $this->container['release'];
    }

    /**
     * Sets release
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseShallowReference $release Gets release reference which specifies the reference of the release to which this release environment is associated.
     *
     * @return $this
     */
    public function setRelease($release)
    {
        $this->container['release'] = $release;

        return $this;
    }

    /**
     * Gets releaseCreatedBy
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\IdentityRef
     */
    public function getReleaseCreatedBy()
    {
        return $this->container['releaseCreatedBy'];
    }

    /**
     * Sets releaseCreatedBy
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\IdentityRef $releaseCreatedBy Gets the identity who created release.
     *
     * @return $this
     */
    public function setReleaseCreatedBy($releaseCreatedBy)
    {
        $this->container['releaseCreatedBy'] = $releaseCreatedBy;

        return $this;
    }

    /**
     * Gets releaseDefinition
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionShallowReference
     */
    public function getReleaseDefinition()
    {
        return $this->container['releaseDefinition'];
    }

    /**
     * Sets releaseDefinition
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseDefinitionShallowReference $releaseDefinition Gets releaseDefinitionReference which specifies the reference of the release definition to which this release environment is associated.
     *
     * @return $this
     */
    public function setReleaseDefinition($releaseDefinition)
    {
        $this->container['releaseDefinition'] = $releaseDefinition;

        return $this;
    }

    /**
     * Gets releaseId
     *
     * @return int
     */
    public function getReleaseId()
    {
        return $this->container['releaseId'];
    }

    /**
     * Sets releaseId
     *
     * @param int $releaseId Gets release id.
     *
     * @return $this
     */
    public function setReleaseId($releaseId)
    {
        $this->container['releaseId'] = $releaseId;

        return $this;
    }

    /**
     * Gets scheduledDeploymentTime
     *
     * @return \DateTime
     */
    public function getScheduledDeploymentTime()
    {
        return $this->container['scheduledDeploymentTime'];
    }

    /**
     * Sets scheduledDeploymentTime
     *
     * @param \DateTime $scheduledDeploymentTime Gets schedule deployment time of release environment.
     *
     * @return $this
     */
    public function setScheduledDeploymentTime($scheduledDeploymentTime)
    {
        $this->container['scheduledDeploymentTime'] = $scheduledDeploymentTime;

        return $this;
    }

    /**
     * Gets schedules
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseSchedule[]
     */
    public function getSchedules()
    {
        return $this->container['schedules'];
    }

    /**
     * Sets schedules
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\ReleaseSchedule[] $schedules Gets list of schedules.
     *
     * @return $this
     */
    public function setSchedules($schedules)
    {
        $this->container['schedules'] = $schedules;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status Gets environment status.
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $allowedValues = $this->getStatusAllowableValues();
        if (!is_null($status) && !in_array($status, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets timeToDeploy
     *
     * @return double
     */
    public function getTimeToDeploy()
    {
        return $this->container['timeToDeploy'];
    }

    /**
     * Sets timeToDeploy
     *
     * @param double $timeToDeploy Gets time to deploy.
     *
     * @return $this
     */
    public function setTimeToDeploy($timeToDeploy)
    {
        $this->container['timeToDeploy'] = $timeToDeploy;

        return $this;
    }

    /**
     * Gets triggerReason
     *
     * @return string
     */
    public function getTriggerReason()
    {
        return $this->container['triggerReason'];
    }

    /**
     * Sets triggerReason
     *
     * @param string $triggerReason Gets trigger reason.
     *
     * @return $this
     */
    public function setTriggerReason($triggerReason)
    {
        $this->container['triggerReason'] = $triggerReason;

        return $this;
    }

    /**
     * Gets variableGroups
     *
     * @return \FrankHouweling\AzureDevOpsClient\Release\Model\VariableGroup[]
     */
    public function getVariableGroups()
    {
        return $this->container['variableGroups'];
    }

    /**
     * Sets variableGroups
     *
     * @param \FrankHouweling\AzureDevOpsClient\Release\Model\VariableGroup[] $variableGroups Gets the list of variable groups.
     *
     * @return $this
     */
    public function setVariableGroups($variableGroups)
    {
        $this->container['variableGroups'] = $variableGroups;

        return $this;
    }

    /**
     * Gets variables
     *
     * @return map[string,\FrankHouweling\AzureDevOpsClient\Release\Model\ConfigurationVariableValue]
     */
    public function getVariables()
    {
        return $this->container['variables'];
    }

    /**
     * Sets variables
     *
     * @param map[string,\FrankHouweling\AzureDevOpsClient\Release\Model\ConfigurationVariableValue] $variables Gets the dictionary of variables.
     *
     * @return $this
     */
    public function setVariables($variables)
    {
        $this->container['variables'] = $variables;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


