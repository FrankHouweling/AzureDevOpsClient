<?php
/**
 * TestResultsSummary
 *
 * PHP version 5
 *
 * @category Class
 * @package  FrankHouweling\AzureDevOpsClient\Clt
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * CloudLoadTest
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0-preview
 * Contact: nugetvss@microsoft.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FrankHouweling\AzureDevOpsClient\Clt\Model;

use \ArrayAccess;
use \FrankHouweling\AzureDevOpsClient\Clt\ObjectSerializer;

/**
 * TestResultsSummary Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FrankHouweling\AzureDevOpsClient\Clt
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TestResultsSummary implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TestResultsSummary';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'overallPageSummary' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\PageSummary',
        'overallRequestSummary' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\RequestSummary',
        'overallScenarioSummary' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\ScenarioSummary',
        'overallTestSummary' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\TestSummary',
        'overallTransactionSummary' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\TransactionSummary',
        'topSlowPages' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\PageSummary[]',
        'topSlowRequests' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\RequestSummary[]',
        'topSlowTests' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\TestSummary[]',
        'topSlowTransactions' => '\FrankHouweling\AzureDevOpsClient\Clt\Model\TransactionSummary[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'overallPageSummary' => null,
        'overallRequestSummary' => null,
        'overallScenarioSummary' => null,
        'overallTestSummary' => null,
        'overallTransactionSummary' => null,
        'topSlowPages' => null,
        'topSlowRequests' => null,
        'topSlowTests' => null,
        'topSlowTransactions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'overallPageSummary' => 'overallPageSummary',
        'overallRequestSummary' => 'overallRequestSummary',
        'overallScenarioSummary' => 'overallScenarioSummary',
        'overallTestSummary' => 'overallTestSummary',
        'overallTransactionSummary' => 'overallTransactionSummary',
        'topSlowPages' => 'topSlowPages',
        'topSlowRequests' => 'topSlowRequests',
        'topSlowTests' => 'topSlowTests',
        'topSlowTransactions' => 'topSlowTransactions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'overallPageSummary' => 'setOverallPageSummary',
        'overallRequestSummary' => 'setOverallRequestSummary',
        'overallScenarioSummary' => 'setOverallScenarioSummary',
        'overallTestSummary' => 'setOverallTestSummary',
        'overallTransactionSummary' => 'setOverallTransactionSummary',
        'topSlowPages' => 'setTopSlowPages',
        'topSlowRequests' => 'setTopSlowRequests',
        'topSlowTests' => 'setTopSlowTests',
        'topSlowTransactions' => 'setTopSlowTransactions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'overallPageSummary' => 'getOverallPageSummary',
        'overallRequestSummary' => 'getOverallRequestSummary',
        'overallScenarioSummary' => 'getOverallScenarioSummary',
        'overallTestSummary' => 'getOverallTestSummary',
        'overallTransactionSummary' => 'getOverallTransactionSummary',
        'topSlowPages' => 'getTopSlowPages',
        'topSlowRequests' => 'getTopSlowRequests',
        'topSlowTests' => 'getTopSlowTests',
        'topSlowTransactions' => 'getTopSlowTransactions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['overallPageSummary'] = isset($data['overallPageSummary']) ? $data['overallPageSummary'] : null;
        $this->container['overallRequestSummary'] = isset($data['overallRequestSummary']) ? $data['overallRequestSummary'] : null;
        $this->container['overallScenarioSummary'] = isset($data['overallScenarioSummary']) ? $data['overallScenarioSummary'] : null;
        $this->container['overallTestSummary'] = isset($data['overallTestSummary']) ? $data['overallTestSummary'] : null;
        $this->container['overallTransactionSummary'] = isset($data['overallTransactionSummary']) ? $data['overallTransactionSummary'] : null;
        $this->container['topSlowPages'] = isset($data['topSlowPages']) ? $data['topSlowPages'] : null;
        $this->container['topSlowRequests'] = isset($data['topSlowRequests']) ? $data['topSlowRequests'] : null;
        $this->container['topSlowTests'] = isset($data['topSlowTests']) ? $data['topSlowTests'] : null;
        $this->container['topSlowTransactions'] = isset($data['topSlowTransactions']) ? $data['topSlowTransactions'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets overallPageSummary
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\PageSummary
     */
    public function getOverallPageSummary()
    {
        return $this->container['overallPageSummary'];
    }

    /**
     * Sets overallPageSummary
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\PageSummary $overallPageSummary overallPageSummary
     *
     * @return $this
     */
    public function setOverallPageSummary($overallPageSummary)
    {
        $this->container['overallPageSummary'] = $overallPageSummary;

        return $this;
    }

    /**
     * Gets overallRequestSummary
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\RequestSummary
     */
    public function getOverallRequestSummary()
    {
        return $this->container['overallRequestSummary'];
    }

    /**
     * Sets overallRequestSummary
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\RequestSummary $overallRequestSummary overallRequestSummary
     *
     * @return $this
     */
    public function setOverallRequestSummary($overallRequestSummary)
    {
        $this->container['overallRequestSummary'] = $overallRequestSummary;

        return $this;
    }

    /**
     * Gets overallScenarioSummary
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\ScenarioSummary
     */
    public function getOverallScenarioSummary()
    {
        return $this->container['overallScenarioSummary'];
    }

    /**
     * Sets overallScenarioSummary
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\ScenarioSummary $overallScenarioSummary overallScenarioSummary
     *
     * @return $this
     */
    public function setOverallScenarioSummary($overallScenarioSummary)
    {
        $this->container['overallScenarioSummary'] = $overallScenarioSummary;

        return $this;
    }

    /**
     * Gets overallTestSummary
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\TestSummary
     */
    public function getOverallTestSummary()
    {
        return $this->container['overallTestSummary'];
    }

    /**
     * Sets overallTestSummary
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\TestSummary $overallTestSummary overallTestSummary
     *
     * @return $this
     */
    public function setOverallTestSummary($overallTestSummary)
    {
        $this->container['overallTestSummary'] = $overallTestSummary;

        return $this;
    }

    /**
     * Gets overallTransactionSummary
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\TransactionSummary
     */
    public function getOverallTransactionSummary()
    {
        return $this->container['overallTransactionSummary'];
    }

    /**
     * Sets overallTransactionSummary
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\TransactionSummary $overallTransactionSummary overallTransactionSummary
     *
     * @return $this
     */
    public function setOverallTransactionSummary($overallTransactionSummary)
    {
        $this->container['overallTransactionSummary'] = $overallTransactionSummary;

        return $this;
    }

    /**
     * Gets topSlowPages
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\PageSummary[]
     */
    public function getTopSlowPages()
    {
        return $this->container['topSlowPages'];
    }

    /**
     * Sets topSlowPages
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\PageSummary[] $topSlowPages topSlowPages
     *
     * @return $this
     */
    public function setTopSlowPages($topSlowPages)
    {
        $this->container['topSlowPages'] = $topSlowPages;

        return $this;
    }

    /**
     * Gets topSlowRequests
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\RequestSummary[]
     */
    public function getTopSlowRequests()
    {
        return $this->container['topSlowRequests'];
    }

    /**
     * Sets topSlowRequests
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\RequestSummary[] $topSlowRequests topSlowRequests
     *
     * @return $this
     */
    public function setTopSlowRequests($topSlowRequests)
    {
        $this->container['topSlowRequests'] = $topSlowRequests;

        return $this;
    }

    /**
     * Gets topSlowTests
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\TestSummary[]
     */
    public function getTopSlowTests()
    {
        return $this->container['topSlowTests'];
    }

    /**
     * Sets topSlowTests
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\TestSummary[] $topSlowTests topSlowTests
     *
     * @return $this
     */
    public function setTopSlowTests($topSlowTests)
    {
        $this->container['topSlowTests'] = $topSlowTests;

        return $this;
    }

    /**
     * Gets topSlowTransactions
     *
     * @return \FrankHouweling\AzureDevOpsClient\Clt\Model\TransactionSummary[]
     */
    public function getTopSlowTransactions()
    {
        return $this->container['topSlowTransactions'];
    }

    /**
     * Sets topSlowTransactions
     *
     * @param \FrankHouweling\AzureDevOpsClient\Clt\Model\TransactionSummary[] $topSlowTransactions topSlowTransactions
     *
     * @return $this
     */
    public function setTopSlowTransactions($topSlowTransactions)
    {
        $this->container['topSlowTransactions'] = $topSlowTransactions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


